3 + 5
10 -3
2 * 3
20 /4
sqrt(16)
2^2
summary(c(173,178,180,183,182,174,179,179,174,192))
身長 <- c(173, 178, 180, 183, 182, 174, 179, 179, 174, 192)
身長
vote <- c(41.4,76.3, 59.2, 51.8, 52.5, 53.2, 62.4, 55, 57.7, 63.2, 37.5, 48.5, 32.4, 20.5, 47.9, 68.9, 68.5, 52.5, 63.3, 58.8, 59.7, 48.4, 40.7, 51, 50.9, 34.3, 25.8, 32.1, 34.4, 55.1, 60.3, 57, 45.6, 54.2, 55.1, 55.7, 70.3, 61.8, 47.6, 42.5, 71.3, 55.2, 65.2, 42.9, 54.7, 62, 48.2)
mean(vote)
count(vote)
vote
house <- c(52.8, 71.2, 72.6, 63.7, 81.3, 81.8, 70.9, 74, 73.2, 72.9, 66.7, 65.7, 43.7, 55.5, 79.6, 85.7, 75.3, 80.5, 73.0, 77, 77.5, 69.2, 60, 78.2, 79.5, 61.8, 49.6, 59.6, 72.1, 71, 76.3, 72.8, 71.8, 60.7, 67, 71.8, 71.2, 68.3, 68.5, 54.8, 76, 65.8, 69.4, 66.9, 69.7, 71.2, 59.6)
mean(house)
house
corr(vote, house)
cor(vote, house)
r <- vor(vote, house)
r <- cor(vote, house)
r <- c(rep(2,4), rep(2.5,6), rep(3,7), rep(3.5, 6), rep(4, 7), rep(4.5, 6), rep(5,6), rep(5.5,6), rep(6,5), rep(6.5,4), 7 )
r
h<- c(2, rep(2.5,2), 3,2,2.5,rep(3,3), 3.5,2.5,rep(3,2), rep(3.5,2), 4,4.5,3,3.5,4,4.5,5,5.5,3.5,4,rep(4.5,2), 5,rep(5.5, 2), 4,4.5,rep(5,2),rep(5.5,2),6,4.5,5,5.5,6,6.5,5,rep(5.5, 2), 6,6.5,7,rep(5.5,2), 6,6.5,7,5.5,6.5,7,5.5,6.5,rep(7,2), 7.5 )
cor(r,h)
h
h<- c(2, rep(2.5,2), 3,2,2.5,rep(3,3), 3.5,2.5,rep(3,2), rep(3.5,2), 4,4.5,3,3.5,4,4.5,5,5.5,3.5,4,rep(4.5,2), 5,rep(5.5, 2), 4,4.5,rep(5,2),rep(5.5,2),6,4.5,5,5.5,6,6.5,5,rep(5.5, 2), 6,6.5,7,rep(5.5,2), 6,6.5,7,5.5,6.5,rep(7,2),7.5 )
cor(r,h)
scatter(r,h)
plot(r,h)
res <- lm(r ~ h)
summary(res)
pre <- predict(res)
cor.test(r, pre)
abline(res)
newx <- data.frame(x = seq(2,7,0.1))
conf.interval <- predict(res, newdata = newx, interval = 'confidence', level = )
num <- 1 - 2 * 0.022750
conf.interval <- predict(res, newdata = newx, interval = 'confidence', level = num)
View(conf.interval)
summary(res)
newx
conf.interval <- predict(res, newdata = newx, interval = 'confidence', level = num)
conf.interval
conf.interval <- predict(res, newdata = newx, interval = 'confidence', level = num)
conf.interval <- predict(res, interval = 'confidence', level = num)
head(coef.interval)
conf.interval <- predict(res, interval = 'confidence', level = num)
head(coef.interval)
View(conf.interval)
conf.interval <- predict(res, newdata= newx, interval = 'confidence', level = num)
predict(res, 8)
predict(res, newdata = c(8))
predict(res, newdata = data.frame(8)
)
cu <- c(229, 367, 301, 352, 457, 427, 427, 485, 616, 695, 806, 815, 826, 951, 1202, 881, 827, 1050, 1127, 1241, 1330, 1158, 1254, 1243, 1216, 1368, 1231, 1219, 1284, 1355)
gdp <- c(61.2, 70, 74.9, 82.8, 93.6, 98.5, 108.8, 120.1, 135.1, 152.5, 165.8, 173, 189.9, 202.6, 199.7, 205, 214.9, 226.3, 238.1, 250.7, 261.4, 271, 279.3, 288.4, 303, 317.3,  325.7, 340.3, 359.5)
cu <- c(229, 367, 301, 352, 457, 427, 485, 616, 695, 806, 815, 826, 951, 1202, 881, 827, 1050, 1127, 1241, 1330, 1158, 1254, 1243, 1216, 1368, 1231, 1219, 1284, 1355)
plot(cu, gdp)
logcu <- log(cu)
loggdp <- log(gdp)
res <- lm(loggdp ~ logcu)
summary(res)
0.48 * 0.97546[]
359.9 * 1.4682208
load_txt_df <- function(){
meros <- gsub('\t|\n','', paste(readLines('data/txt/meros.txt'), collapse='\n'))
aguni <- gsub('\t|\n','', paste(readLines('data/txt/aguni.txt'), collapse='\n'))
torokko <- gsub('\t|\n','', paste(readLines('data/txt/torokko.txt'), collapse='\n'))
txt_df <<- data.frame(
title=c('走れメロス','アグ二の国','トロッコ'),
text=c(meros,aguni,torokko)
)
}
source("~/.active-rstudio-document")
customer_tb
source("~/data_load.R")
source("~/data_load.R")
source("~/data_load.R")
source("~/data_load.R")
source("~/data_load.R")
setwd("~/Desktop/programming/science/RStudio/basicStatics")
source("~/data_load.R")
sample_frac(reserve_tb, 0.5)
library(tidyverse)
sample_frac(reserve_tb, 0.5)
all_id <- unique(reserve_tb$customer_id)
reserve_tb %>%
filter(customer_id %in% sample(all_id, size = length(all_id) * 0.5))
reserve_tb %>%
group_by(hotel_id) %>%
summarise(rsv_cnt = n(), cus_cnt = n_distinct(customer_id))
reserve_tb %>%
group_by(hotel_id, people_num) %>%
summarise(price_sum = sum(total_price))
reserve_tb %>%
group_by(hotel_id) %>%
summarise()
reserve_tb %>%
group_by(hotel_id) %>%
summarise( max_price = max(total_price), min_price = min(total_price), avg_price = mean(total_price), med_price = median(total_price), per_20price = quantile(total_price, 0.2))
reserve_tb %>%
group_by(hotel_id) %>%
summarise(price_var = coalesce(var(total_price), 0), price_std= coalesce(sd(total_price), 0))
table(round(reserve_tb$total_price, -3))
which.max(table(round(reserve_tb$total_price, -3)))
names(which.max(table(round(reserve_tb$total_price, -3))))
reserve_tb$reserve_datetime <- as.POSIXct(reserve_tb$reserve_datetime, format = '%Y-%m-%d %H:%M:%S')
reserve_tb %>%
group_by(customer_tb) %>%
mutate(log_no = row_number(reserve_datetime))
reserve_tb %>%
group_by(customer_id) %>%
mutate(log_no = row_number(reserve_datetime))
reserve_tb %>%
group_by(hotel_id) %>%
summarise(rsv_cnt=n()) %>%
transmute(hotel_id, rsv_cnt_rank = min_rank(desc(rsv_cnt)))
inner_join(reserve_tb, hotel_tb, by='hotel_id') %>%
filter(people_num == 1, is_business)
inner_join(reserve_tb %>% filter(people_num == 1), hotel_tb %>% filter(is_business), by = 'hotel_id')
small_area_mst <-
hotel_tb %>%
group_by(big_area_name, small_area_name) %>%
summarise(hotel_cnt = n() -1 ) %>%
ungroup() %>%
mutate(join_area_id = if_else(hotel_cnt >= 20, small_area_name, big_area_name)) %>%
select(small_area_name, join_area_id)
small_area_mst
base_hotel_mst <-
inner_join(hotel_tb, small_area_mst, by = 'small_area_name') %>%
select(hotel_id, join_area_id)
rm(small_area_mst)
recommend_hotel_mst <-
bind_rows(hotel_tb %>%
rename(rec_hotel_id = hotel_id, join_area_id = big_area_name) %>%
select(join_area_id, rec_hotel_id),
hotel_tb %>5
recommend_hotel_mst <-
bind_rows(hotel_tb %>%
rename(rec_hotel_id = hotel_id, join_area_id = big_area_name) %>%
select(join_area_id, rec_hotel_id),
hotel_tb %>%
rename(rec_hotel_id = hotel_id, join_area_id = small_area_name) %>%
select(join_area_id, rec_hotel_id)
)
inner_join(base_hotel_mst, recommend_hotel_mst, by = 'join_area_id') %>%
filter(hotel_id != rec_hotel_id) %>%
select(hotel_idm rec_hotel_id)
inner_join(base_hotel_mst, recommend_hotel_mst, by = 'join_area_id') %>%
filter(hotel_id != rec_hotel_id) %>%
select(hotel_id, rec_hotel_id)
reserve_tb %>%
group_by(customer_id) %>%
mutate(before_price = lag(total_price, n = 2, order_by = reserve_datetime, default = NA))
reserve_tb %>%
group_by(customer_id) %>%
mutate(before_price = lag(total_price, n = 2, order_by = reserve_datetime, default = NA))
library(RcppRoll)
install.packages('RcppRoll')
library(RcppRoll)
reserve_tb %>%
group_by(customer_id) %>%
arrange(reserve_datetime) %>%
mutate(price_sum = roll_sum(total_price, n = 3, align = 'right', fill=NA))
reserve_tb$reserve_datetime <-
as.PO
reserve_tb %>%
group_by(customer_id) %>%
arrange(reserve_datetime) %>%
mutate(price_avg = (lag(total_price, 1, order_by = reserve_datetime, default = 0) + lag(total_price, 2, order_by = reserve_datetime, default = 0) + lag(total_price, 3, order_by = reserve_datetime, default = 0) / if_else(row_number(reserve_datetime) > 3, 3, row_number(reserve_datetime) - 1)))
library(tidyr)
sum_table <-
inner_join(reserve_tb %>%
select(reserve_id, customer_id, reserve_datetime),
reserve_tb %>%
select(customer_id, reserve_datetime, total_price) %>%
rename(reserve_datetime_before = reserve_datetime),
by = 'customer_id') %>%
filter(reserve_datetime > reserve_datetime_before & reserve_datetime - 60 * 60 * 24 * 90 <= reserve_datetime_before) %>%
select(reserve_id, total_price) >%%
select(reserve_id, total_price) %>%
select(reserve_id, customer_id, reserve_datetime),
sum_table <-
inner_join(reserve_tb %>%
select(reserve_id, customer_id, reserve_datetime),
reserve_tb %>%
select(customer_id, reserve_datetime, total_price) %>%
rename(reserve_datetime_before = reserve_datetime),
by = 'customer_id') %>%
filter(reserve_datetime > reserve_datetime_before & reserve_datetime - 60 * 60 * 24 * 90 <= reserve_datetime_before) %>%
select(reserve_id, total_price) >%%
sum_table <-
inner_join(reserve_tb %>%
select(reserve_id, customer_id, reserve_datetime),
reserve_tb %>%
select(customer_id, reserve_datetime, total_price) %>%
rename(reserve_datetime_before = reserve_datetime),
by = 'customer_id') %>%
filter(reserve_datetime > reserve_datetime_before & reserve_datetime - 60 * 60 * 24 * 90 <= reserve_datetime_before) %>%
select(reserve_id, total_price) %>%
group_by(reserve_id) %>%
summarise(total_price_90d = sum(total_price)) %>%
select(reserve_id, total_price_90d)
left_join(reserve_tb, sum_table, by = 'reserve_id') %>%
replace_na(list(total_price_90d = 0))
library(tidyverse)
month_mst <- data.frame(year_month = format(sep(as.Date('2017-01-01'), as.Date('2017-03-01'), by = 'months'), format = '%Y%m'))
month_mst <- data.frame(year_month = format(seq(as.Date('2017-01-01'), as.Date('2017-03-01'), by = 'months'), format = '%Y%m'))
customer_mst <- merge(customer_tb %>% select(customer_id), month_mst) %>%
mutate(customer_id = as.charactor(customer_id), year_month = as.charactor(year_month))
customer_mst <- merge(customer_tb %>% select(customer_id), month_mst) %>%
mutate(customer_id = as.character(customer_id), year_month = as.character(year_month))
left_join(customer_mst, reserve_tb %>%
mutate(checkin_month = format(as.Date(checkin_date), format = '%Y%m')),
by = c('customer_id' = 'customer_id', 'year_month' = 'checkin_month')
) %>%
group_by(customer_id, year_month) %>%
summarise(price_sum = sum(total_price)) %>%
replace_na(list(price_sum = 0))
library(caTools)
library(cvTools)
install.packages(cvTools)
install.packages('cvTools')
library(cvTolls)
library(cvTools)
set.seed(71)
test_tf <- sample.split(production_tb$fault_flg, SplitRatio = 0.2)
train <- production_tb %>% filter(!test_tf)
private_test <- production_tb %>% filter(test_tf)
cv_no <- cvFolds(nrow(train), K=4)
for(test_k in 1:cv_no$K){
train_cv <- train %>% slice(cv_no$subsets[cv_no$which != test_k])
test_cv <- train %>% slice(cv_no$subsets[cv_no$which == test_k])
}
library(caret)
install.packages('caret')
install.packages("caret")
install.packages("caret")
library(caret)
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
library(caret)
install.packages('cli')
install.packages("cli")
library(caret)
library(cli)
remove.packages('cli')
install.packages('cli')
install.packages("cli")
library(caret)
library(cli)
library(cli)
