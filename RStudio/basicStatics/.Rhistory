veca*vecb
veca/vecb
veca%*%vecb
veca * 5
vecd <- c(2,4)
veca + vecd
veca * vecd
vece <- 10:20
vece
vece[2]
vece[3:7]
vecf <- vece[c(2,4,6,8)]
vecf
vecg <- vece[c(10,1,8,6)]
vecg
matrix(1:12, nrow =3, ncol=4)
matrix(1:12, 3,4)
matrix(1:12, nrow=3)
matrix(1:12, ncol=4)
matrix(1:12,ncol=4, nrow=3)
matrix(1:12, 3,4,byrow=TRUE)
veca
vecb
cbind(veca, vecb)
rbind(veca,vecb)
meta <- matrix(1:6, nrow=2, 3)
meta
rownames(meta) <- c('r1', 'r2')
colnames(meta) <- c('c1', 'c2', 'c3')
meta
matb <- matrix(3:8, 2,3)
matb
mata + matb
mata <- matrix(1:6,2,3)
mata
mata + matb
mata-matab
mata-matb
mata*matb
mata/matb
matbt <- t(matb)
matbt
t(matbt)
matbt%*%mata
mata%*%matbt
matc <- matrix(1:9, 3,3)
matc
diag(c(1,2,3))
diag(3)
matc
matc%*%diag(3)
matd <- matrix(1:25,5,5)
matd
matd[,2]
matd[2,]
matd[,c(1,3)]
matd[c(2,4),]
matd[2,4]
all_data <- cbind(A,B,C,D)
all_data
mean(all_data[,1])
mate <- matrix(c(1,0.5,0.5,0.5,1,0.5,0.5,0.5,1), 3,3)
mate
det(mate)
matei <- solve(mate)
matei
mate%*%matei
eigen(mat)
eigen(mate)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
teach_method
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
table(teach_method$method)
table(teach_method[,9])
hist(teach_method$psych_test)
mean(teach_method$psych_test)
var(teach_method$psyco_test)
var(teach_method$psych_test)
sd(teach_method$psych_test)
max(teach_method$psych_test)
min(teach_method$psych_test)
for (i in 6:8){print(mean(teach_method[,i]))}
psych_z <- scale(teach_method$psych_test)
psych_z
psych_spec <- 10 * psych_z + 10
psych_spec <- 10 * psych_z + 50
psych_spec
plot(teach_method$stat_test1, teach_method$stat_test2)
cov(teach_method$stat_test1, teach_method$stat_test2)
cor(teach_method$stat_test1, teach_method$stat_test2)
table(teach_method$math, teach_method$stat)
cor(as.integer(teach_method$math), as.integer(teach_method$stat))
cor(as.integer(teach_method$math), as.integer(teach_method$stat))
cor(as.numeric(teach_method$math), as.numeric(teach_method$stat))
as.integer(teach_method$math)
as.integer(teach_method$math)
as.factor(teach_method$math)
as.(teach_method$math)
teacher_method
teach_method
as.integer(math)
as.integer(conditionA2)
as_integer(teach_method$math)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
mapping
teach_method$math <- factor(teach_method$math)
as.integer(teach_method$math)
teach_method$stat <- factor(teach_method$stat)
cor(as.integer(teach_method$math), as.integer(teach_method$stat))
teach_method$math
t.test(teach_method$psych_test, mu=12)
cor.test(teach_method$stat_test1, teach_method$stat_test2)
cross <-table(teach_method$math, teach_method$stat)
cross
chisq.test(cross, correct=FALSE)
t.test(teach_method$stat-test1~teach_method$sex, var.equal=TRUE)
t.test(teach_method$stat_test1~teach_method$sex, var.equal=TRUE)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
stat_man <- teach_method$stat_test1[teach_method$sex=="男"]
stat_man
stat_woman <- teach_method$stat_test1[teach_method$sex=="女"]
stat_woman
t.test(stat_man,stat_woman,var.equal=TRUE)
t.test(teach_method$stat_test1, teach_method$stat_test2, paired=TRUE)
bartlett.test(teach_method$stat_test2,teach_method$method)
bartlett.test(teach_method$stat_test2~teach_method$method)
oneway.test(teach_method$stat_test2~teach_method$method, var.equal = TRUE)
TukeyHSD(aov(teach_method$stat_test2~teach_method$method))
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
hanshin
Hanshin
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
hanshin
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp8.R")
sweets1
sweets2
attach(sweets1)
ice
choco
candy
attach(sweets2)
ice
choco
candy
edit(hanshin)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
animals
attach(animals)
plot(Species, Brain_weight)
plot(Species, Brain_weight, xlim=1:1500)
plot(Species, Brain_weight, xlim=[1,1500])
plot(Species, Brain_weight, xlim=c(1,5800))
Species <- factor(Species)
plot(Species, Brain_weight, xlim=c(1,5800))
plot(Species, Brain_weight
)
plot(Body_weight, Brain_weight, xlim=c(1,5800))
plot(Body_weight, Brain_weight
)
cor(Body_weight, Brain_weight)
animals
condition1 <- animals$Body_weight < 80000
animas2<- animals[condition1,]
animals
animals2<- animals[condition1,]
animals2
attach(animals)
plot(Body_weight, Brain_weight)
plot(Body_weight, Brain_weight)
attach(animals2)
plot(Body_weight, Brain_weight)
cor(Body_weight, Brain_weight)
condition2 <- Body_weight<2000
animals2 <- animals[condition2, ]
animals2 <- animals[condition1, ]
animals3 <- animals2[condition2, ]
attach(animals3)
plot(Body_weight, Brain_weight)
cor(Body_weight,Brain_weight)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
child
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
attach(child_data)
child
View(child)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
attach(child_data)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
attach(child_data)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
model.coop <- specify.model()
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
coop <- read.moments(diag=FALSE, names=as.character(paste("y", 1:12, sep=" ")))
.160
.302 .341
.461 .400 .372
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
install.packages("sem")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
library(sem)
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
library(sem)
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
rnorm(n=5,  mean=50, sd=10)
curve(dunif(x, min=0, max=100), from=-20, to=150)
runif(n=5, min=0, max=100)
p <- runif(n=10)
p
x <- cut(p, c(0, 0.4,1))
x
levels(x) <- c(0,1)
x
bef_cat<- runif(n=10)
aft_cat <- cut(bef_cat, c(0, 0.2, 0.8, 1))
levels(aft_cat) <- 1:3
aft_cat
pop_spec <- 0.6
x <- runif(n=100)
y <- runif(n=100)
e <- runif(n=100)
y <- pop_spec * x + (1- pop_spec)^2 * e
y
cor(x,y)
cor(x,y)
y <- pop_spec * x + (1- pop_spec^2) * e
cor(x,y)
pop_spec <- 0.6
x <- runif(n=100)
e1 <- runif(n=100)
e2 <- runif(n=100)
y1 <- sqrt(pop_spec) * x + (1- pop_spec^2) * e1
y2 <- sqrt(pop_spec) * x + (1- pop_spec^2) * e2
cor(y1, y2)
e3 <- runif(n=100)
y3 <- sqrt(pop_spec) * x + sqrt(1-pop_spec^2) * e3
y1 <- sqrt(pop_spec) * x + sqrt(1- pop_spec^2) * e1
y2 <- sqrt(pop_spec) * x + sqrt(1- pop_spec^2) * e2
cor(y1, y2)
cor(y1, y3)
cor(y2,y3)
y3 <- sqrt(pop_spec) * x + sqrt(1-pop_spec) * e3
y1 <- sqrt(pop_spec) * x + sqrt(1- pop_spec) * e1
y2 <- sqrt(pop_spec) * x + sqrt(1- pop_spec) * e2
cor(y1, y3)
cor(y2,y3)
cor(y1,y2)
y <- pop_spec * x + sqrt(1- pop_spec^2) * e
cor(x,y)
sample_size <- 100
variable_num <- 4
random_inde <- matrix(rnorm(n=sample_size * variable_num), nrow=sample_size)
random_inde
cor_coef_matrix  <- matrix(c(1, .5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=variable_num)
cor_coef_matrix
up_tri_mat <- chol(cor_coef_matrix)
up_tri_mat
obs_val <- random_inde %*% up_tri_mat
obs_val
cor(obs_    )
cor(obs_val)
sample_size <- 10000
num_val <- 4
rand_ind <- matrix(rnorm(n=sample_size * num_val), nrow=sample_size)
cor_coef_matr <- matrix(c(1,.5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=num_val)
up_tri_mat <-chol(cor_coef_matr)
obs_val <- rand_ind %*% up_tri_mat
cor(obs_val)
sample_size <- 10000
num_val <-4
ind_rand <- matrix(rnorm(n=sample_size * num_val), nrow=sample_size)
mean_matr <- matrix(rep(c(1,2,3,4),sample_size), nrow=sample_size, byrow = TRUE)
covar_matr <- matrix(c(1,.5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=num_val)
up_tri_mat <- chol(covar_matr)
obs_val <- ind_rand %*% up_tri_mat + mean_matr
mean(obs_val[,1])
mean(obs_val[,2])
mean(obs_val[,3])
mean(obs_val[,4])
cov(obs_val)
sample_size <- 100
intercept <- 10
coef1 <- 3
coef2 <- 0.5
x1 <- rnorm(n=sample_size)
x2 <- rnorm(n=sample_size)
e <- rnorm(n=sample_size, sd-10)
e <- rnorm(n=sample_size, sd=10)
y <- intercept + coef1 * x1 + coef2 * x2 + e
lm(y~x1+x2)
x2 <- runif(n=sample_size, min=0, max=100)
y <- intercept + coef1 * x1 + coef2 * x2 + e
lm(y~x1+x2)
sample_size <- 1000
a11 <- 0.6
a12 <- .2
a21 <- 0.6
a22 <- .2
a31 <- .2
a32 <- .6
a41 <- 0.2
a42 <- .6
a51 <- .4
a52 <- .4
f1 <- rnorm(n=sample_size)
f2 <- rnorm(n=sample_size)
u1 <- rnorm(n=sample_size, sd=sqrt(.6))
u2 <- rnorm(n=sample_size, sd =sqrt(.6))
u3 <- rnorm(n=sample_size, sd=sqrt(.6))
u4 <- rnorm(n=sample_size, sd=sqrt(.6))
u5<- rnorm(n=sample_size, sd=sqrt(.6))
u5<- rnorm(n=sample_size, sd=sqrt(.68))
x1 <- a11 * f1 + a12 * f2 + u1
x2 <- a21 * f1 + a22 * f2 + u2
x3 <- a31 * f1 + a32 * f2 + u3
x4 <- a41 * f1 + a42 * f2 + u4
x5 <- a51 * f1 + a52 * f2 + u5
data_matr <- cbind(x1,x2,x3,x4,x5)
factanal(data_matr, factors=2)
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
sample_size <- 1000
facter_load_matr <- matrix(c(.6,.6,.2,.2,.4,.2,.2,.6,.6,.4),nrow=5)
indep <- diag(sqrt(c(0.6,.6,.6,.6,.68)))
factor_score <- matrix(rnorm(2*sample_size),nrow=2)
independent_factor <- matrix(rnorm(5 * sample_size),nrow=5)
observ_score <- round(t(facter_load_matr%*%factor_score + indep %*% independent_factor))
factanal(observ_score, factors=2)
data <- rnorm(n=10)
z_score <- scale(data)
mean(z_score)
sd(x_score)
sd(z_score)
z_score2 <- z_score * sqrt(length(data)/(length(data)-1))
sqrt(mean((z_score2 - mean(z_score2))^2))
sample_size <- 50
num_val <- 4
ind_random <- matrix(rnorm(n=sample_size * num_val), nrow=sample_size)
princomp <- princomp(ind_random)
princomp_score <- princomp$scores
norm_princomp_score <- scale(princomp_score)
cor_coef_matr <- matrix(c(1,.5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=num_val)
up_tria_matr <- chol(cor_coef_matr)
obs_val <- norm_princomp_score %*% up_tri_mat
obs_val
cor(obs_val)
set.seed(0)
rnorm(5)
rnorm
rnorm(5)
set.seed(0)
rnorm(10)
set.seed(2^31)
set.seed(1)
rnorm(5)
set.seed(1.2)
rnorm(5)
set.seed(3/2)
rnorm(5)
set.seed(sqrt(3))
rnorm(5)
source("~/.active-rstudio-document")
ga
gA
gB
gC
t.test(gA,gB, var.equal = TRUE)
test_result <- t.test(gA,gB,var.equal = TRUE)
length(test_result)
test_result[1]
test_result[2]
test_result[3]
test_result[4]
test_result[5]
test1 <- t.test(gA,gB,var.equal = TRUE)
test2 <- t.test(gB,gC,var.equal = TRUE)
test3 <- t.test(gC,gA, var.equal = TRUE)
ifelse(test1$p.value <0.05 | test2$p.value < 0.05 | test3$p.value < 0.05, "wrong", "right")
test1$p.value
test1$p.value
test2$p.value
test3$p.value
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,"F","T")
for(i in 1:10){
gA <- rnorm(10)
gB <- rnorm(10)
gC <- rnorm(10)
test1 <- t.test(gA,gB, var.equal = TRUE)
test2 <- t.test(gB,gC, var.equal = TRUE)
test3 <- t.test(gC,gA,var.equal = TRUE)
ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,"F","T")
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
err1
source("~/.active-rstudio-document")
err1
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
gC <- rnorm(10)
source("~/.active-rstudio-document")
for(i in 1:10){
gA <- rnorm(10)
gB <- rnorm(10)
gC <- rnorm(10)
test1 <- t.test(gA,gB, var.equal = TRUE)
test2 <- t.test(gB,gC, var.equal = TRUE)
test3 <- t.test(gC,gA,var.equal = TRUE)
err1 <- err1 + ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,1,0)
}
err1
source("~/.active-rstudio-document")
for(i in 1:num_iter){
gA <- rnorm(10)
gB <- rnorm(10)
gC <- rnorm(10)
test1 <- t.test(gA,gB, var.equal = TRUE)
test2 <- t.test(gB,gC, var.equal = TRUE)
test3 <- t.test(gC,gA,var.equal = TRUE)
err1 <- err1 + ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,1,0)
}
err1
source("~/.active-rstudio-document")
err1/num_iter
err1 <- 0
t_val <- numeric(10000)
p_count  <- 0
for(i in 1:10000){}
for(i in 1:10000){
g1 <- rnorm(10, mean=0, sd=1)
g2 <- rnorm(10, mean=0.5, sd=1)
result <- t.test(g1,g2,var.equal=TRUE)
t_val[i] <- result[[1]]
p_count <- p_count + ifelse(result[[3]] < 0.05, 1,0)
}
p_count /10000
hist(t_val, freq=FALSE)
curve(dt(x,df=18), add=TRUE)
qt(0.025, df=18)
length(t_val[abs(t_val) > qt(0.025, df=18, lower.tail=FALSE)])
curve(dt(x,df=18, ncp=-.5* sqrt(5)),add=TRUE)
power.t.test(n=10, delta=0.5, sd=1, sig.level=0.05,power=NULL, strict=TRUE)
power.t.test(n=10, delta=0.5,sd=1,sig.level=0.05)
power.t.test(n=NULL, delta=0.5, sd=1, sig.level=0.05, power=0.8, strict=TRUE)
install.packages("pwr")
library(pwr)
pwr.t.test(n=NULL, d=0.5,sig.level=0.05,power=0.8)
pwr.t.test(n=NULL, d=0.5, sig.level=0.05, power=0.8, type='two.sample', alternative='two.sided')
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp20.R")
cohen.ES(test='t', size='medium')
cohen.ES(test='t', size='large')
pwr.t.test(r=0.3, power=0.8)
pwr.r.test(r=0.3, power=0.8)
cohen.ES(test='r', size='medium')
cohen.ES(test='chisq', size='medium')
pwr.chisq.test(w=0.3, df=1.power=0.8)
pwr.chisq.test(w=0.3, df=1.power=0.8)
,
pwr.chisq.test(w=0.3, df=1,power=0.8)
cohen.ES(test='anov', size='medium')
pwr.anova.test(k=4, f=0.25, power=0.8)
q()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
length(math)
msth
math
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
attach(data)
math
