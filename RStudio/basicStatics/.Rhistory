animals
condition1 <- animals$Body_weight < 80000
animas2<- animals[condition1,]
animals
animals2<- animals[condition1,]
animals2
attach(animals)
plot(Body_weight, Brain_weight)
plot(Body_weight, Brain_weight)
attach(animals2)
plot(Body_weight, Brain_weight)
cor(Body_weight, Brain_weight)
condition2 <- Body_weight<2000
animals2 <- animals[condition2, ]
animals2 <- animals[condition1, ]
animals3 <- animals2[condition2, ]
attach(animals3)
plot(Body_weight, Brain_weight)
cor(Body_weight,Brain_weight)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
child
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
attach(child_data)
child
View(child)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
attach(child_data)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp10.R")
attach(child_data)
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
model.coop <- specify.model()
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp12.R")
coop <- read.moments(diag=FALSE, names=as.character(paste("y", 1:12, sep=" ")))
.160
.302 .341
.461 .400 .372
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
install.packages("sem")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
library(sem)
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
library(sem)
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/sem_file.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
rnorm(n=5,  mean=50, sd=10)
curve(dunif(x, min=0, max=100), from=-20, to=150)
runif(n=5, min=0, max=100)
p <- runif(n=10)
p
x <- cut(p, c(0, 0.4,1))
x
levels(x) <- c(0,1)
x
bef_cat<- runif(n=10)
aft_cat <- cut(bef_cat, c(0, 0.2, 0.8, 1))
levels(aft_cat) <- 1:3
aft_cat
pop_spec <- 0.6
x <- runif(n=100)
y <- runif(n=100)
e <- runif(n=100)
y <- pop_spec * x + (1- pop_spec)^2 * e
y
cor(x,y)
cor(x,y)
y <- pop_spec * x + (1- pop_spec^2) * e
cor(x,y)
pop_spec <- 0.6
x <- runif(n=100)
e1 <- runif(n=100)
e2 <- runif(n=100)
y1 <- sqrt(pop_spec) * x + (1- pop_spec^2) * e1
y2 <- sqrt(pop_spec) * x + (1- pop_spec^2) * e2
cor(y1, y2)
e3 <- runif(n=100)
y3 <- sqrt(pop_spec) * x + sqrt(1-pop_spec^2) * e3
y1 <- sqrt(pop_spec) * x + sqrt(1- pop_spec^2) * e1
y2 <- sqrt(pop_spec) * x + sqrt(1- pop_spec^2) * e2
cor(y1, y2)
cor(y1, y3)
cor(y2,y3)
y3 <- sqrt(pop_spec) * x + sqrt(1-pop_spec) * e3
y1 <- sqrt(pop_spec) * x + sqrt(1- pop_spec) * e1
y2 <- sqrt(pop_spec) * x + sqrt(1- pop_spec) * e2
cor(y1, y3)
cor(y2,y3)
cor(y1,y2)
y <- pop_spec * x + sqrt(1- pop_spec^2) * e
cor(x,y)
sample_size <- 100
variable_num <- 4
random_inde <- matrix(rnorm(n=sample_size * variable_num), nrow=sample_size)
random_inde
cor_coef_matrix  <- matrix(c(1, .5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=variable_num)
cor_coef_matrix
up_tri_mat <- chol(cor_coef_matrix)
up_tri_mat
obs_val <- random_inde %*% up_tri_mat
obs_val
cor(obs_    )
cor(obs_val)
sample_size <- 10000
num_val <- 4
rand_ind <- matrix(rnorm(n=sample_size * num_val), nrow=sample_size)
cor_coef_matr <- matrix(c(1,.5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=num_val)
up_tri_mat <-chol(cor_coef_matr)
obs_val <- rand_ind %*% up_tri_mat
cor(obs_val)
sample_size <- 10000
num_val <-4
ind_rand <- matrix(rnorm(n=sample_size * num_val), nrow=sample_size)
mean_matr <- matrix(rep(c(1,2,3,4),sample_size), nrow=sample_size, byrow = TRUE)
covar_matr <- matrix(c(1,.5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=num_val)
up_tri_mat <- chol(covar_matr)
obs_val <- ind_rand %*% up_tri_mat + mean_matr
mean(obs_val[,1])
mean(obs_val[,2])
mean(obs_val[,3])
mean(obs_val[,4])
cov(obs_val)
sample_size <- 100
intercept <- 10
coef1 <- 3
coef2 <- 0.5
x1 <- rnorm(n=sample_size)
x2 <- rnorm(n=sample_size)
e <- rnorm(n=sample_size, sd-10)
e <- rnorm(n=sample_size, sd=10)
y <- intercept + coef1 * x1 + coef2 * x2 + e
lm(y~x1+x2)
x2 <- runif(n=sample_size, min=0, max=100)
y <- intercept + coef1 * x1 + coef2 * x2 + e
lm(y~x1+x2)
sample_size <- 1000
a11 <- 0.6
a12 <- .2
a21 <- 0.6
a22 <- .2
a31 <- .2
a32 <- .6
a41 <- 0.2
a42 <- .6
a51 <- .4
a52 <- .4
f1 <- rnorm(n=sample_size)
f2 <- rnorm(n=sample_size)
u1 <- rnorm(n=sample_size, sd=sqrt(.6))
u2 <- rnorm(n=sample_size, sd =sqrt(.6))
u3 <- rnorm(n=sample_size, sd=sqrt(.6))
u4 <- rnorm(n=sample_size, sd=sqrt(.6))
u5<- rnorm(n=sample_size, sd=sqrt(.6))
u5<- rnorm(n=sample_size, sd=sqrt(.68))
x1 <- a11 * f1 + a12 * f2 + u1
x2 <- a21 * f1 + a22 * f2 + u2
x3 <- a31 * f1 + a32 * f2 + u3
x4 <- a41 * f1 + a42 * f2 + u4
x5 <- a51 * f1 + a52 * f2 + u5
data_matr <- cbind(x1,x2,x3,x4,x5)
factanal(data_matr, factors=2)
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/ch18.R")
sample_size <- 1000
facter_load_matr <- matrix(c(.6,.6,.2,.2,.4,.2,.2,.6,.6,.4),nrow=5)
indep <- diag(sqrt(c(0.6,.6,.6,.6,.68)))
factor_score <- matrix(rnorm(2*sample_size),nrow=2)
independent_factor <- matrix(rnorm(5 * sample_size),nrow=5)
observ_score <- round(t(facter_load_matr%*%factor_score + indep %*% independent_factor))
factanal(observ_score, factors=2)
data <- rnorm(n=10)
z_score <- scale(data)
mean(z_score)
sd(x_score)
sd(z_score)
z_score2 <- z_score * sqrt(length(data)/(length(data)-1))
sqrt(mean((z_score2 - mean(z_score2))^2))
sample_size <- 50
num_val <- 4
ind_random <- matrix(rnorm(n=sample_size * num_val), nrow=sample_size)
princomp <- princomp(ind_random)
princomp_score <- princomp$scores
norm_princomp_score <- scale(princomp_score)
cor_coef_matr <- matrix(c(1,.5,.4,.3,.5,1,.5,.4,.4,.5,1,.5,.3,.4,.5,1),nrow=num_val)
up_tria_matr <- chol(cor_coef_matr)
obs_val <- norm_princomp_score %*% up_tri_mat
obs_val
cor(obs_val)
set.seed(0)
rnorm(5)
rnorm
rnorm(5)
set.seed(0)
rnorm(10)
set.seed(2^31)
set.seed(1)
rnorm(5)
set.seed(1.2)
rnorm(5)
set.seed(3/2)
rnorm(5)
set.seed(sqrt(3))
rnorm(5)
source("~/.active-rstudio-document")
ga
gA
gB
gC
t.test(gA,gB, var.equal = TRUE)
test_result <- t.test(gA,gB,var.equal = TRUE)
length(test_result)
test_result[1]
test_result[2]
test_result[3]
test_result[4]
test_result[5]
test1 <- t.test(gA,gB,var.equal = TRUE)
test2 <- t.test(gB,gC,var.equal = TRUE)
test3 <- t.test(gC,gA, var.equal = TRUE)
ifelse(test1$p.value <0.05 | test2$p.value < 0.05 | test3$p.value < 0.05, "wrong", "right")
test1$p.value
test1$p.value
test2$p.value
test3$p.value
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,"F","T")
for(i in 1:10){
gA <- rnorm(10)
gB <- rnorm(10)
gC <- rnorm(10)
test1 <- t.test(gA,gB, var.equal = TRUE)
test2 <- t.test(gB,gC, var.equal = TRUE)
test3 <- t.test(gC,gA,var.equal = TRUE)
ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,"F","T")
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
err1
source("~/.active-rstudio-document")
err1
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
gC <- rnorm(10)
source("~/.active-rstudio-document")
for(i in 1:10){
gA <- rnorm(10)
gB <- rnorm(10)
gC <- rnorm(10)
test1 <- t.test(gA,gB, var.equal = TRUE)
test2 <- t.test(gB,gC, var.equal = TRUE)
test3 <- t.test(gC,gA,var.equal = TRUE)
err1 <- err1 + ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,1,0)
}
err1
source("~/.active-rstudio-document")
for(i in 1:num_iter){
gA <- rnorm(10)
gB <- rnorm(10)
gC <- rnorm(10)
test1 <- t.test(gA,gB, var.equal = TRUE)
test2 <- t.test(gB,gC, var.equal = TRUE)
test3 <- t.test(gC,gA,var.equal = TRUE)
err1 <- err1 + ifelse(test1$p.value < 0.05 | test2$p.value < 0.05 | test3$p.value < .05,1,0)
}
err1
source("~/.active-rstudio-document")
err1/num_iter
err1 <- 0
t_val <- numeric(10000)
p_count  <- 0
for(i in 1:10000){}
for(i in 1:10000){
g1 <- rnorm(10, mean=0, sd=1)
g2 <- rnorm(10, mean=0.5, sd=1)
result <- t.test(g1,g2,var.equal=TRUE)
t_val[i] <- result[[1]]
p_count <- p_count + ifelse(result[[3]] < 0.05, 1,0)
}
p_count /10000
hist(t_val, freq=FALSE)
curve(dt(x,df=18), add=TRUE)
qt(0.025, df=18)
length(t_val[abs(t_val) > qt(0.025, df=18, lower.tail=FALSE)])
curve(dt(x,df=18, ncp=-.5* sqrt(5)),add=TRUE)
power.t.test(n=10, delta=0.5, sd=1, sig.level=0.05,power=NULL, strict=TRUE)
power.t.test(n=10, delta=0.5,sd=1,sig.level=0.05)
power.t.test(n=NULL, delta=0.5, sd=1, sig.level=0.05, power=0.8, strict=TRUE)
install.packages("pwr")
library(pwr)
pwr.t.test(n=NULL, d=0.5,sig.level=0.05,power=0.8)
pwr.t.test(n=NULL, d=0.5, sig.level=0.05, power=0.8, type='two.sample', alternative='two.sided')
source("~/Desktop/programming/science/RStudio/basicStatics/R/chp20.R")
cohen.ES(test='t', size='medium')
cohen.ES(test='t', size='large')
pwr.t.test(r=0.3, power=0.8)
pwr.r.test(r=0.3, power=0.8)
cohen.ES(test='r', size='medium')
cohen.ES(test='chisq', size='medium')
pwr.chisq.test(w=0.3, df=1.power=0.8)
pwr.chisq.test(w=0.3, df=1.power=0.8)
,
pwr.chisq.test(w=0.3, df=1,power=0.8)
cohen.ES(test='anov', size='medium')
pwr.anova.test(k=4, f=0.25, power=0.8)
q()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
length(math)
msth
math
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
attach(data)
math
x <- runif(10000, )
x <- runif(100000)
y <- sqrt(x)
hist(y, prob=TRUE)
curve(2*x, 0,1,add=TRUE)
curve(x^2, 0,1, add=TRUE)
y <-  -log(1-x)
hist(y, prob=TRUE)
curve(1-1/e^x, 0,1,add=TRUE)
curve(1-1/exp(x), 0,1,add=TRUE)
curve(1/exp(x), 0,1,add=TRUE)
curve(1/exp(x), 0,10,add=TRUE)
y <- sin(x)
x <- runif(100000, min=-pi/2, max=pi/2)
y <- sin(x)
hist(y,prob=TRUE)
curve(1/(pi * sqrt(1-x^2)),add=TRUE)
dbinom(c(1,5,8),10,p=0.6)
dbinom(7,10,p=0.6)
pbinom(3,10,p=0.6)
dbinom(c(1,2,3), 10, p=0.6)
sum(dbinom(c(1,2,3), 10, p=.6))
round(sum(dbinom(c(1,2,3), 10, p=.6)))
round(sum(dbinom(c(1,2,3), 10, p=.6)),3)
barplot(dbinom(0:10, 10, 0.5), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=2.3), names=0:10, xlab='x')
years<-c(1,6,6,8,5,7,0,1,0)
m <- sum((0:8)*years)/sum(years)
m
data <- data.frame(years, sum(years)*dpois(0:8, lambda=m))
barplot(t(data), coL=c('black', 'gray'), beside=TRUE, names.arg=0:8, xlab='number of accidents')
barplot(t(data), col=c('black', 'gray'), beside=TRUE, names.arg=0:8, xlab='number of accidents')
legend('topleft', legend=c('real', 'theory'), bg='transparent', fill=c('black', 'gray'))
barplot(data, coL=c('black', 'gray'), beside=TRUE, names.arg=0:8, xlab='number of accidents')
first <- rgeom(100000, prob=1/6)
hist(first, prob=TRUE
)
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
barplot(dnbinom(k, size=3, prob=0.2), names.arg=k)
k .- 0:40
k <- 0:40
barplot(dnbinom(k, size=3, prob=0.2), names.arg=k)
barplot(dpois(0:10, lambda=2.3), names=0:10, xlab='k')
barplot(dpois(0:10, lambda=2.3), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=3), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=4), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=1), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=t), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=5), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=100), names=0:10, xlab='x')
barplot(dpois(0:10, lambda=6), names=0:10, xlab='x')
barplot(dnbinom(k, size=3, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=4, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=2, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=5, prob=0.2), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.4), names.arg=k)
barplot(dnbinom(k, size=3, prob=0.5), names.arg=k)
barplot(dnbinom(k, size=4, prob=0.5), names.arg=k)
barplot(dnbinom(k, size=5, prob=0.5), names.arg=k)
barplot(dnbinom(k, size=5, prob=0.5), names.arg=k)
barplot(dnbinom(k, size=6, prob=0.5), names.arg=k)
curve(dnorm(x,mean=5,sd=1), 1,9,type='l')
1-pnorm(9,mean=8,sd=2)
plot(0:20, dbinom(0:20,20,prob=0.5), xlab='',ylab='')
par(new=TRUE
)
curve(dnorm(x,mean=10, sd=sqrt(20*0.5*(1-0.5))), 0, 20, xlab='x', ylab='',axes=FALSE)
curve(dnorm(x, meanlog=1, sdlog=1), 0, 10, type='l')
curve(dlnorm(x, meanlog=1, sdlog=1), 0, 10, type='l')
curve(dexp(x,rate=2))
n <- 10* 3
r <- rexp(n,rate=2.3)
x <- 0
xnum<- 0
count<-0
time <- 0
for(i in 1:n){
time <- time + r[i]
if(time < 1) count <- count + 1
else{
x[xnum] <- count
xnum <- xnum + 1
time <- 0
count <- 0
}
}
barplot(table(x)/xnum)
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
plot(c(0,150), c(0,1), type='n', axes=FALSE, xlab='', ylab='')
axis(1)
n <- 50
r <- rexp(n, rate=0.5)
pos <- numeric(n)
for(i in 1:n) pos[i] <- sum(r[1:i])
segments(pos, 0.2, pos, 0.8)
x <- seq(-3.5, 0.1)
curve(dcauchy(x,location=1,scale=2), -3.5)
curve(dcauchy(x,location=1,scale=2), -3,5)
x <- seq(0,5,by=0.01)
curve(dweibull(x,shape=5, scale=3),0.5)
curve(dweibull(x,shape=5, scale=3),0,5)
curve(dweibull(x,shape=0.5, scale=3),0,5)
curve(dweibull(x,shape=0.5, scale=3),0,5, add=TRUE
)
curve(dweibull(x,shape=5, scale=3),0,5, add=TRUE
)
curve(dweibull(x,shape=3, scale=3),0,5, add=TRUE
)
curve(dweibull(x,shape=1, scale=3),0,5, add=TRUE
)
curve(dweibull(x,shape=3, scale=3),0,5)
curve(dweibull(x,shape=3, scale=1),0,5)
curve(dweibull(x,shape=3, scale=2),0,5,add=TRUE)
curve(dweibull(x,shape=3, scale=3),0,5,add=TRUE)
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/static1.R")
lt
source("~/Desktop/programming/science/RStudio/basicStatics/R/life.R")
life_table[]
source("~/Desktop/programming/science/RStudio/basicStatics/R/life.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/life.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/life.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/life.R")
source("~/Desktop/programming/science/RStudio/basicStatics/R/life.R")
res<- nls(deathratee^(k/L) * (age/L)^(k-1) * exp(-(x/L)^k), start = c(k=9, L=80))
summary(res)
res<- nls(deathrate^(k/L) * (age/L)^(k-1) * exp(-(x/L)^k), start = c(k=9, L=80))
res<- nls(deathrate~(k/L) * (age/L)^(k-1) * exp(-(x/L)^k), start = c(k=9, L=80))
x <- age
y<-deathrate
res<- nls(y~(k/L) * (x/L)^(k-1) * exp(-(x/L)^k), start = c(k=9, L=80))
summary(res)
x <- age + 1
res<- nls(y~(k/L) * (x/L)^(k-1) * exp(-(x/L)^k), start = c(k=9, L=80))
x <- age
y2 <- log(y)
res<- nls(y2~(k/L) * (x/L)^(k-1) * exp(-(x/L)^k), start = c(k=9, L=80))
summary(res)
y2 <- log2(y)
res<- nls(y2~(k/L) * (x/L)^(k-1) * exp(-(x/L)^k), start = c(k=9, L=80))
summary8res
summary(rs)
summary(res)
plot(x,y)
curve(2^((53.68/87.03)*(x/87.03)^(52.68)*exp(-(x/87.03)^53.68)))
plot(x,y)
curve(2^((53.68/87.03)*(x/87.03)^(52.68)*exp(-(x/87.03)^53.68)), add=TRUE
)
curve(2^( (53.68/87.03)*(x/87.03)^(52.68)*exp(-(x/87.03)^(53.68))), add=TRUE
)
curve(2^( (53.68/87.03)*(x/87.03)^(52.68)*exp(-(x/87.03)^(53.68))), add=TRUE
)
plot(x,y2, add=TRUE)
plot(x,y2)
warning()
warnings()
plot(x,y2)
